syntax = "proto3";
package cln;

import "hold_primitives.proto";

service Hold {
	rpc HoldInvoice(HoldInvoiceRequest) returns (HoldInvoiceResponse) {}
	rpc HoldInvoiceSettle(HoldInvoiceSettleRequest) returns (HoldInvoiceSettleResponse) {}
	rpc HoldInvoiceCancel(HoldInvoiceCancelRequest) returns (HoldInvoiceCancelResponse) {}
	rpc HoldInvoiceLookup(HoldInvoiceLookupRequest) returns (HoldInvoiceLookupResponse) {}
	
}

message Amount {
	uint64 msat = 1;
}

enum Holdstate {
	OPEN = 0;
	SETTLED = 1;
	CANCELED = 2;
	ACCEPTED = 3;
}

message HoldInvoiceRequest {
	Amount amount_msat = 10;
	string description = 2;
	string label = 3;
	optional uint64 expiry = 7;
	repeated string fallbacks = 4;
	optional bytes preimage = 5;
	optional uint32 cltv = 6;
	repeated string exposeprivatechannels = 8;
	optional bool deschashonly = 9;
}

message HoldInvoiceResponse {
	string bolt11 = 1;
	bytes payment_hash = 2;
	bytes payment_secret = 3;
	uint64 expires_at = 4;
	optional string warning_capacity = 5;
	optional string warning_offline = 6;
	optional string warning_deadends = 7;
	optional string warning_private_unused = 8;
	optional string warning_mpp = 9;
	optional uint64 created_index = 10;
}

message HoldInvoiceSettleRequest {
	bytes payment_hash = 1;
}

message HoldInvoiceSettleResponse {
	Holdstate state = 1;
}

message HoldInvoiceCancelRequest {
	bytes payment_hash = 1;
}

message HoldInvoiceCancelResponse {
	Holdstate state = 1;
}

message HoldInvoiceLookupRequest {
	bytes payment_hash = 1;
}

message HoldInvoiceLookupResponse {
	Holdstate state = 1;
	optional uint32 htlc_expiry = 2;
}


